:name dropchance_calculator

key.b()

#difficultyfactor (1.0 + (0.25 * (floor(i2d(index("{difficultystring}",difficulty,0))/10.0))))

#difficultystring \
easy------\
----------\
mediumhard\
----------\
insane----\
nightmare-\
impossible

#unsetstring \
dropchancethiswave--\
peakdropchance------\
dropchancepersecond-\

:global double dropchancethiswave
:global double dropchancefactor
:global double basemoduledropchance
:global double peakdropchance
:global string difficulty
:global int dropchancetoggle
:local double savedtimestamp
:global double dropchancepersecond
:local int unsetincrement

isTowerTesting() == true

dropchancetoggle = 1 - dropchancetoggle
gotoif(99, dropchancetoggle==0)
dropchancefactor = 1.0
basemoduledropchance = 0.01
difficulty = "easy"

outerloop:
waituntil(health(false) != 0.)
savedtimestamp = now()

dropchanceloop:
; module dropchance formula is (difficulty factor * dropchance factor * base module dropchance * log(wave/10))
dropchancethiswave = ({difficultyfactor} * basemoduledropchance * dropchancefactor * (((wave()/10.0)+(era()*1e11)+(infinity()*1e22))//10.0))
peakdropchance = max(peakdropchance , dropchancethiswave)
dropchancepersecond = dropchancethiswave/((now() - savedtimestamp)/1e7)
goto(if(dropchancetoggle == 1,\
	if(health(false)!=0.,\
		dropchanceloop,\
		outerloop\
	),\
	end\
))

end:
unsetincrement += 1
gu(sub("{unsetstring}" , (unsetincrement - 1) * 20, (index("{unsetstring}", "-", (unsetincrement - 1)*20) - (unsetincrement - 1) *20)))
gotoif(end, unsetincrement < 3)
